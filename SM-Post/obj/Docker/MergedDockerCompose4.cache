name: dockercompose10471627111741524912
services:
  kafka:
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 0@kafka:9093
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093
      KAFKA_CFG_NODE_ID: "0"
      KAFKA_CFG_PROCESS_ROLES: controller,broker
    image: docker.io/bitnami/kafka:3.5
    networks:
      default: null
    ports:
    - mode: ingress
      target: 9092
      published: "9092"
      protocol: tcp
    volumes:
    - type: volume
      source: kafka_data
      target: /bitnami
      volume: {}
  kafkamongo:
    container_name: kafkamongo
    environment:
      MONGO_INITDB_ROOT_PASSWORD: mongopw
      MONGO_INITDB_ROOT_USERNAME: root
    hostname: kafkamongo
    image: mongo
    networks:
      default: null
    ports:
    - mode: ingress
      target: 27017
      published: "27998"
      protocol: tcp
    volumes:
    - type: volume
      source: kafkamongodata
      target: /var/lib/mongodb/data
      volume: {}
  post.cmd.api:
    build:
      context: G:\Repos\Microservices\SM-Post
      dockerfile: Dockerfile
      labels:
        com.microsoft.created-by: visual-studio
        com.microsoft.visual-studio.project-name: Post.Cmd.Api
    container_name: Post.Cmd.Api
    entrypoint:
    - tail
    - -f
    - /dev/null
    labels:
      com.microsoft.visual-studio.project-name: Post.Cmd.Api
      com.microsoft.visualstudio.debuggee.arguments: ' --additionalProbingPath /.nuget/packages
        --additionalProbingPath /.nuget/fallbackpackages  "/app/Post.Cmd.Api.dll"'
      com.microsoft.visualstudio.debuggee.killprogram: /bin/sh -c "if PID=$$(pidof
        dotnet); then kill $$PID; fi"
      com.microsoft.visualstudio.debuggee.program: dotnet
      com.microsoft.visualstudio.debuggee.workingdirectory: /app
    networks:
      default: null
    tty: true
    volumes:
    - type: bind
      source: C:\Users\Carlos\vsdbg\vs2017u5
      target: /remote_debugger
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Carlos\AppData\Roaming/ASP.NET/Https
      target: /root/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Carlos\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Carlos\AppData\Roaming/Microsoft/UserSecrets
      target: /root/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Carlos\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\TokenService.Proxy\linux-x64\net7.0
      target: /TokenService.Proxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\MSBuild\Sdks\Microsoft.Docker.Sdk\tools\HotReloadProxy\linux-x64\net7.0
      target: /HotReloadProxy
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Program Files\Microsoft Visual Studio\2022\Community\Common7\IDE\CommonExtensions\Microsoft\HotReload
      target: /HotReloadAgent
      read_only: true
      bind:
        create_host_path: true
networks:
  default:
    name: dockercompose10471627111741524912_default
volumes:
  kafka_data:
    name: dockercompose10471627111741524912_kafka_data
    driver: local
  kafkamongodata:
    name: dockercompose10471627111741524912_kafkamongodata